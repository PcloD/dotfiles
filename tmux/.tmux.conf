# bindings
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
# split to 4 panes
bind-key + split-window -h \; split-window -v \; select-pane -L \; split-window -v
# split to 3 horizontal panes
bind-key t split-window -h \; split-window -h \; select-layout even-horizontal
# split to 4 horizontal panes
bind-key f split-window -h \; split-window -h \; split-window -h \; select-layout even-horizontal
unbind '"'
unbind %
bind-key r source-file ~/.tmux.conf
bind-key s setw synchronize-panes on
bind-key n setw synchronize-panes off

set-option -g mouse on
bind C-l send-keys 'C-l'

# styles and visual stuff
set -g default-terminal "screen-256color"
set-option -g status-bg colour235
set-option -g status-fg green
set-option -g status-attr dim
set-option -g status-left-length 20
set-window-option -g window-status-current-bg yellow
set-window-option -g window-status-current-fg black
set-window-option -g status-attr dim
set -g status-right "#[fg=colour3]#{pane_current_path}#[fg=colour4]  || #[fg=colour3]%l:%M %p"
set -g window-status-separator ' :: '

# don't wait for another key before executing
# this supposedly breaks some stuff, but working ok for me up to now
# need to learn more
set -s escape-time 0

# use vim bindings 
set-window-option -g mode-keys vi
set-option -g status-keys vi

# keep status messages up for 2 seconds
set-option -g display-time 2000

# lets vim get focus events to refresh content
set -g focus-events on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
    bind-key -T copy-mode-vi C-h select-pane -L
    bind-key -T copy-mode-vi C-j select-pane -D
    bind-key -T copy-mode-vi C-k select-pane -U
    bind-key -T copy-mode-vi C-l select-pane -R
    bind-key -T copy-mode-vi C-\ select-pane -l

# copy-paste integration
# gotta actually figure this out one of these days.
# set-option -g default-command "reattach-to-user-namespace -l bash"
